spring.config.import=optional:file:.env[.properties]

spring.application.name=spring-clean-arch

# Configuração do Banco de Dados (PostgreSQL)
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driver-class-name=org.postgresql.Driver

spring.docker.compose.enabled=true
server.port=8081

# Chave secreta para o Token JWT
api.security.token.secret=${API_SECURITY_TOKEN_SECRET}

app.debug.profile=main

# ============================
# Configuração do RabbitMQ
# ============================
spring.rabbitmq.host=${RABBITMQ_HOST}
spring.rabbitmq.port=${RABBITMQ_PORT}
spring.rabbitmq.username=${RABBITMQ_USERNAME}
spring.rabbitmq.password=${RABBITMQ_PASSWORD}
# Permite que o Spring AMQP deserialize qualquer classe dos pacotes de DTO
spring.amqp.rabbit.listener.simple.message-converter.trusted-packages = br.com.rodoviaria.spring_clean_arch.application.dto.*
rabbitmq.queue.name=${RABBITMQ_QUEUE_NAME}
rabbitmq.exchange.name=${RABBITMQ_EXCHANGE_NAME}

# Configuração do Spring Mail (Gmail)
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
# Propriedades adicionais do JavaMail
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Habilita o desligamento gracioso para a aplicação
server.shutdown=graceful

